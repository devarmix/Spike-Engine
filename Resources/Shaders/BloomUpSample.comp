#version 450

#extension GL_GOOGLE_include_directive : require

#include "ToneMap.glsl"

layout(local_size_x = 32, local_size_y = 32, local_size_z = 1) in;

layout(set = 0, binding = 0) uniform sampler2D SamplerTextureA;
layout(set = 0, binding = 1) uniform sampler2D SamplerTextureB;
layout(set = 0, binding = 2, rgba16f) uniform writeonly image2D OutTexture;

layout(push_constant) uniform Constants {

    vec2 OutSize;

    uint IsComposite;
    float BloomIntensity;
    float FilterRadius;
    float pad0[3];
} BloomConstants;

vec3 UpSample9(vec2 texCoord) {

    float x = BloomConstants.FilterRadius;
	float y = BloomConstants.FilterRadius;

	vec3 a = texture(SamplerTextureA, vec2(texCoord.x - x, texCoord.y + y)).rgb;
	vec3 b = texture(SamplerTextureA, vec2(texCoord.x,     texCoord.y + y)).rgb;
	vec3 c = texture(SamplerTextureA, vec2(texCoord.x + x, texCoord.y + y)).rgb;

	vec3 d = texture(SamplerTextureA, vec2(texCoord.x - x, texCoord.y)).rgb;
	vec3 e = texture(SamplerTextureA, vec2(texCoord.x,     texCoord.y)).rgb;
	vec3 f = texture(SamplerTextureA, vec2(texCoord.x + x, texCoord.y)).rgb;

	vec3 g = texture(SamplerTextureA, vec2(texCoord.x - x, texCoord.y - y)).rgb;
	vec3 h = texture(SamplerTextureA, vec2(texCoord.x,     texCoord.y - y)).rgb;
	vec3 i = texture(SamplerTextureA, vec2(texCoord.x + x, texCoord.y - y)).rgb;

    vec3 upsample = e*4.0;
	upsample += (b+d+f+h)*2.0;
	upsample += (a+c+g+i);
	upsample *= 1.0 / 16.0;

    return upsample;
}

void main() {

    ivec2 invocID = ivec2(gl_GlobalInvocationID);

    vec2 imgSize = BloomConstants.OutSize;
    vec2 texCoord = vec2(float(invocID.x) / imgSize.x, float(invocID.y) / imgSize.y);
    texCoord += (1.0f / imgSize) * 0.5f;

    vec3 color = UpSample9(texCoord);
    vec3 colorB = texture(SamplerTextureB, texCoord).rgb;

    if (BloomConstants.IsComposite == 1) {

        color = mix(colorB, color, BloomConstants.BloomIntensity);
        color = ToneMap(color);
    } else {

        color += colorB;
    }

    imageStore(OutTexture, invocID, vec4(color, 1.0f));
}